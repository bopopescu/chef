#!/bin/bash
#
# Starts a Flume NG agent
#
# chkconfig: 345 90 10
# description: Flume NG agent
#
### BEGIN INIT INFO
# Provides:          $flume_ng
# Required-Start:    $local_fs
# Required-Stop:     $local_fs
# Should-Start:
# Should-Stop:
# Default-Start:     3 4 5
# Default-Stop:      0 1 2 6
# Short-Description: Flume NG agent
### END INIT INFO

# source function lib
. /etc/init.d/functions

# chef injected values
FLUME_HOME=<%= @node[:flume_ng][:home] %>
FLUME_EXEC=<%= @node[:flume_ng][:exec] %>
FLUME_AGENT_NAME=<%= @node[:flume_ng][:agent_name] %>
FLUME_CONF_DIR=${FLUME_HOME}/<%= @node[:flume_ng][:conf_dir] %>
FLUME_CONF_FILE=${FLUME_CONF_DIR}/<%= @node[:flume_ng][:conf_file] %>
FLUME_LOGDIR=<%= @node[:flume_ng][:log_dir] %>
FLUME_NICENESS=<%= @node[:flume_ng][:niceness] %>

pidfile=<%= @node[:flume_ng][:run_dir] %>/<%= @node[:flume_ng][:pidfile] %>
pidfile_java=<%= @node[:flume_ng][:run_dir] %>/<%= @node[:flume_ng][:pidfile] %>.java
lockfile=<%= @node[:flume_ng][:lockfile] %>
logfile=${FLUME_LOGDIR}/${FLUME_AGENT_NAME}.init.log

user=<%= @node[:flume_ng][:user] %>
group=<%= @node[:tomcat7][:group] %>

desc="Flume NG agent daemon"

RETVAL=0

start() {
  [ -x $FLUME_EXEC ] || exit 5

  checkstatus
  status=$?
  if [ $status -eq 0 ]; then
    exit 0
  fi

  umask 002

  echo -n $"Starting $desc (flume-ng-agent): "
  # TODO look into getting something more formal like daemon to work
  # daemon --user="flume" --pidfile="$pidfile" $FLUME_EXEC agent -n $FLUME_AGENT_NAME -c $FLUME_CONF_DIR -f $FLUME_CONF_FILE &
  runuser -l $user -g $group -s /bin/bash -c "/bin/bash -c 'umask 002 && echo \$\$ >$pidfile && exec nice -n $FLUME_NICENESS $FLUME_EXEC agent --conf $FLUME_CONF_DIR --conf-file $FLUME_CONF_FILE --name $FLUME_AGENT_NAME -Dflume.monitoring.type=<%= @node[:flume_ng][:monitoring][:type] %> -Dflume.monitoring.port=<%= @node[:flume_ng][:monitoring][:port] %> >>$logfile 2>&1' &"
  RETVAL=$?;
  [ $RETVAL -eq 0 ] && touch $lockfile; success || failure
  echo
  return $RETVAL
}

stop() {
  echo -n $"Stopping $desc (flume-ng-agent): "
  killproc -p "$pidfile" $FLUME_EXEC
  RETVAL=$?
  echo
  [ $RETVAL -eq 0 ] && rm -f $lockfile
  return $RETVAL
}

restart() {
  stop
  start
}

checkstatus() {
  status -p "$pidfile" -l $FLUME_AGENT_NAME $FLUME_EXEC
  return $?
}

condrestart() {
  [ -e ${lockfile} ] && restart || :
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  status)
    checkstatus
    ;;
  restart)
    restart
    ;;
  condrestart|try-restart)
    condrestart
    ;;
  *)
    echo $"Usage: $0 {start|stop|status|restart|try-restart|condrestart}"
    exit 1
esac

exit $RETVAL
