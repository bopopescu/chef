# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# agent
tier1.sources   = avro_src
tier1.channels  = mem_channel
tier1.sinks     = hdfs_sink

# memory channel
tier1.channels.mem_channel.type                 = memory
tier1.channels.mem_channel.capacity             = 100000
## transactionCapacity should be set to the value of the largest batch size
## that will be used to store or remove events the channel.
tier1.channels.mem_channel.transactionCapacity  = 2000

# avro source
tier1.sources.avro_src.type     = avro
tier1.sources.avro_src.bind     = 0.0.0.0
tier1.sources.avro_src.port     = <%= @node[:flume_ng][:hadoop][:namenode][:avro_port] %>
tier1.sources.avro_src.threads  = 5
tier1.sources.avro_src.channels = mem_channel

# debug sink
tier1.sinks.debug.type    = logger
tier1.sinks.debug.channel = mem_channel

# hdfs sink
tier1.sinks.hdfs_sink.type               = hdfs
tier1.sinks.hdfs_sink.hdfs.path          = /data/logs/%{log_type}_raw/year=%Y/month=%m/day=%d
tier1.sinks.hdfs_sink.hdfs.timeZone      = EST5EDT
tier1.sinks.hdfs_sink.hdfs.filePrefix    = log-
## roll at 256mb
tier1.sinks.hdfs_sink.hdfs.rollSize      = 268435456
tier1.sinks.hdfs_sink.hdfs.rollInterval  = 0
tier1.sinks.hdfs_sink.hdfs.rollCount     = 0
tier1.sinks.hdfs_sink.hdfs.fileType      = DataStream
## 1000 is typical for hdfs_sink
tier1.sinks.hdfs_sink.hdfs.batchSize     = 1000
tier1.sinks.hdfs_sink.channel            = mem_channel
