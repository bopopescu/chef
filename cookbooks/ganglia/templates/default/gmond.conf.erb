/* This configuration is as close to 2.5.x default behavior as possible
   The values closely match ./gmond/metric.h definitions in 2.5.x */
globals {
  daemonize = yes
  setuid = yes
  user = ganglia
  debug_level = 0
  max_udp_msg_len = 1472
  mute = no
  deaf = no
  host_dmax = 0 /*secs */
  cleanup_threshold = 300 /*secs */
  gexec = no
  send_metadata_interval = 10
}

/* If a cluster attribute is specified, then all gmond hosts are wrapped inside
 * of a <CLUSTER> tag.  If you do not specify a cluster tag, then all <HOSTS> will
 * NOT be wrapped inside of a <CLUSTER> tag. */
cluster {
  name = "<%= @cluster_name %>"
  owner = "unspecified"
  latlong = "unspecified"
  url = "unspecified"
}

/* The host section describes attributes of the host, like the location */
host {
  location = "unspecified"
}

/* Feel free to specify as many udp_send_channels as you like.  Gmond
   used to only support having a single channel */
udp_send_channel {
  mcast_join = 239.2.11.71
  port = <%= @cluster['gmond_port'] %>
  ttl = 1
}

/* You can specify as many udp_recv_channels as you like as well. */
udp_recv_channel {
  mcast_join = 239.2.11.71
  port = <%= @cluster[:gmond_port] %>
  bind = 239.2.11.71
}

/* You can specify as many tcp_accept_channels as you like to share
   an xml description of the state of the cluster */
tcp_accept_channel {
  port = <%= @cluster[:gmond_port] %>
}

# /* channel to receive sFlow */
# /* 6343 is the default sFlow port, an explicit sFlow    */
# /* configuration section is needed to override default  */
udp_recv_channel {
  bind = localhost
  port = 6343
}

<% if node[:recipes].include? "ganglia::gmetad" && "ganglia::graphite" -%>
/* Additional receive channel for graphite integration */
udp_recv_channel {
 bind = 127.0.0.1
 port = <%= @cluster[:gmond_port] %>
}
<% end -%>

# /* Optional sFlow settings */
sflow {
  udp_port = 6343
  accept_vm_metrics = yes
  accept_jvm_metrics = yes
# multiple_jvm_instances = no
  accept_http_metrics = yes
# multiple_http_instances = no
  accept_memcache_metrics = yes
# multiple_memcache_instances = no
}

/* Each metrics module that is referenced by gmond must be specified and
  loaded. If the module has been statically linked with gmond, it does not
  a load path. However all dynamically loadable modules must include load path. */
modules {
  module {
    name = "core_metrics"
  }
  module {
    name = "cpu_module"
    path = "/usr/lib64/ganglia/modcpu.so"
  }
  module {
    name = "disk_module"
    path = "/usr/lib64/ganglia/moddisk.so"
  }
  module {
    name = "load_module"
    path = "/usr/lib64/ganglia/modload.so"
  }
  module {
    name = "mem_module"
    path = "/usr/lib64/ganglia/modmem.so"
  }
  module {
    name = "net_module"
    path = "/usr/lib64/ganglia/modnet.so"
  }
  module {
    name = "proc_module"
    path = "/usr/lib64/ganglia/modproc.so"
  }
  module {
    name = "sys_module"
    path = "/usr/lib64/ganglia/modsys.so"
  }
}

collection_group {
  collect_once = yes
  time_threshold = 20
  metric {
    name = "heartbeat"
  }
}
