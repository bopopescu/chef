// Generated by CoffeeScript 1.4.0
(function() {
  var page, runner, system;

  system = require('system');

  page = require('webpage').create();

  page.onConsoleMessage = function(msg) {
    return console.log(msg);
  };

  page.onAlert = function(data) {
    var parsedData;
    parsedData = (function() {
      try {
        return JSON.parse(data);
      } catch (error) {
        return data;
      }
    })();
    if (parsedData.state === 'end') {
      phantom.exit();
    }
    if (parsedData.state === 'start') {
      return runner();
    }
  };

  page.onError = function(msg, trace) {
    var item, _i, _len;
    console.log(msg);
    for (_i = 0, _len = trace.length; _i < _len; _i++) {
      item = trace[_i];
      console.log("  " + item.file + " : " + item.line);
    }
    return phantom.exit(1);
  };

  runner = function() {
    return page.evaluate(function() {
      mocha.setup({
        ui: 'bdd',
        reporter: Mocha.reporters.Min,
        globals: ['jQuery*']
      });
      return mocha.run().on('end', function() {
        return alert(JSON.stringify({
          state: 'end'
        }));
      });
    });
  };

  page.open(system.args[1], function(status) {
    if (status !== 'success') {
      console.log('Unable to access network');
      return phantom.exit();
    } else {
      page.injectJs('lib/bind.js');
      page.injectJs('lib/console.js');
      return page.injectJs('lib/process.stdout.write.js');
    }
  });

}).call(this);
