// Generated by CoffeeScript 1.4.0
(function() {

  define(function(require) {
    var $, Backbone, PlaylistView, expect;
    PlaylistView = require('src/browse/typeviews/concierge').PlaylistView;
    Backbone = require('backbone');
    $ = require('jquery');
    expect = chai.expect;
    return describe('Concierge Resource', function() {
      describe('PlaylistView', function() {
        var collection, playlist;
        collection = null;
        playlist = null;
        beforeEach(function() {
          var model;
          collection = new Backbone.Collection;
          model = new Backbone.Model();
          collection.add(model);
          return playlist = new PlaylistView({
            model: model
          });
        });
        it('removes model on delete', function() {
          playlist["delete"]();
          return expect(collection.models).length(0);
        });
        it('calls collection delete on delete', function() {
          var spy;
          spy = this.spy(collection, 'remove');
          playlist["delete"]();
          return this.assertCalledOnce(spy);
        });
        return it('removes model on trash icon click', function() {
          playlist.render();
          this.fixturesContainer.append(playlist.$el);
          playlist.$('.icon-trash').click();
          return expect(collection.models).length(0);
        });
      });
      return describe('AttachmentsView', function() {
        var collection, playlist;
        collection = null;
        playlist = null;
        return beforeEach(function() {
          var model;
          collection = new Backbone.Collection;
          model = new Backbone.Model();
          collection.add(model);
          return playlist = new PlaylistView({
            model: model
          });
        });
      });
    });
  });

}).call(this);
