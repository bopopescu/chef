// Generated by CoffeeScript 1.4.0
(function() {

  define(function(require) {
    var Blob, ModifyView, commitData, dataTypesData, expect, populateResponse, _;
    ModifyView = require('src/browse/modify').ModifyView;
    Blob = require('src/browse/models').Blob;
    populateResponse = require('util/ResponseHelper').populateResponse;
    _ = require('underscore');
    expect = chai.expect;
    commitData = require('fixtures/commit');
    dataTypesData = require('fixtures/data_types');
    return describe('In the modify view', function() {
      var blob, modifyView, text;
      modifyView = blob = text = null;
      beforeEach(function() {
        text = 'foo';
        blob = new Blob(commitData);
        modifyView = new ModifyView({
          model: blob
        });
        this.fixturesContainer.html(modifyView.el);
        return this.server.respond(populateResponse(dataTypesData));
      });
      describe('not creating a ref', function() {
        return it('will not update the refs with the clicked ref', function() {
          return expect(_.keys(blob.index().get('refs'))).not.contain(text);
        });
      });
      describe('creating a ref', function() {
        beforeEach(function() {
          modifyView.$('.push-group form input').val(text);
          return modifyView.$('.push-group form button').click();
        });
        it('will update the refs with the clicked ref', function() {
          return expect(_.keys(blob.index().get('refs'))).contain(text);
        });
        return describe('with an uppercase ref name', function() {
          return it('will send the ref name in lower case', function() {
            text = 'UPPER';
            modifyView.$('.push-group form input').val(text);
            modifyView.$('.push-group form button').click();
            return expect(_.keys(blob.index().get('refs'))).contain(text.toLowerCase());
          });
        });
      });
      return describe('updating a ref', function() {
        var ref, request;
        ref = request = null;
        beforeEach(function() {
          text = 'develop';
          ref = blob.index().dataStore.get('refs').get(text);
          modifyView.$('.push-group form input').val(text);
          modifyView.$('.push-group form button').click();
          return request = this.server.requests.first();
        });
        it('updates the existing ref', function() {
          return expect(ref.get('commit')).equal(blob.commitId());
        });
        it('sends a PUT request', function() {
          return expect(request.method).equal('PUT');
        });
        it('sends to the correct endpoint', function() {
          return expect(request.url).equal('/api/v2/meh.des/refs/develop');
        });
        return it('sends the new commit id', function() {
          return expect(request.requestBody).contain(blob.commitId());
        });
      });
    });
  });

}).call(this);
