// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(function(require) {
    var $, SingleSelectTypeAhead, TypeAhead, typeaheadDefaults;
    $ = require('jquery');
    require('bootstrap');
    TypeAhead = $.fn.typeahead.Constructor;
    typeaheadDefaults = $.fn.typeahead.defaults;
    SingleSelectTypeAhead = (function(_super) {

      __extends(SingleSelectTypeAhead, _super);

      function SingleSelectTypeAhead(element, options) {
        this.$container = $(element);
        element = this.$container.find('input');
        options = $.extend({}, $.fn.singleSelectTypeahead.defaults, options);
        SingleSelectTypeAhead.__super__.constructor.call(this, element, options);
      }

      SingleSelectTypeAhead.prototype.listen = function() {
        SingleSelectTypeAhead.__super__.listen.call(this);
        return this.$container.on('click', 'li i', $.proxy(this.closeTag, this));
      };

      SingleSelectTypeAhead.prototype.select = function() {
        var $tag, val;
        val = this.$menu.find('.active').attr('data-value');
        $tag = $(this.options.tag);
        $tag.find('span').prepend(val);
        this.$container.prepend($tag);
        SingleSelectTypeAhead.__super__.select.call(this);
        return this.$element.hide();
      };

      SingleSelectTypeAhead.prototype.updater = function() {
        return '';
      };

      SingleSelectTypeAhead.prototype.closeTag = function(e) {
        $(e.target).parents('li').remove();
        return this.$element.show();
      };

      return SingleSelectTypeAhead;

    })(TypeAhead);
    $.fn.singleSelectTypeahead = function(option) {
      return this.each(function() {
        var $this, data, options;
        $this = $(this);
        data = $this.data('typeahead');
        options = typeof option === 'object' && option;
        if (!data) {
          $this.data('typeahead', (data = new SingleSelectTypeAhead(this, options)));
        }
        if (typeof option === 'string') {
          return data[option]();
        }
      });
    };
    return $.fn.singleSelectTypeahead.defaults = {
      tag: '<li><span class="badge badge-info"><i class="icon-remove-sign"></i></span></li>'
    };
  });

}).call(this);
