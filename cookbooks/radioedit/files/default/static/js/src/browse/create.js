// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(function(require) {
    var $, AlertView, Backbone, CreateGlobalObjectView, PopoverView, createGlobalTemplate, _, _ref;
    _ = require('underscore');
    $ = require('jquery');
    Backbone = require('backbone');
    createGlobalTemplate = require('eco/browse/create');
    _ref = require('src/browse/base'), AlertView = _ref.AlertView, PopoverView = _ref.PopoverView;
    CreateGlobalObjectView = (function(_super) {

      __extends(CreateGlobalObjectView, _super);

      function CreateGlobalObjectView() {
        return CreateGlobalObjectView.__super__.constructor.apply(this, arguments);
      }

      CreateGlobalObjectView.prototype.className = 'createObjectPopover';

      CreateGlobalObjectView.prototype.initialize = function() {
        var _ref1,
          _this = this;
        CreateGlobalObjectView.__super__.initialize.call(this);
        _ref1 = this.options, this.bucket = _ref1.bucket, this.path = _ref1.path;
        this.bucket.on('error', this.handleErrors, this);
        this.alertView = new AlertView();
        return this.collection.populate().done(function() {
          return _this.render();
        });
      };

      CreateGlobalObjectView.prototype.events = function() {
        return _.extend(CreateGlobalObjectView.__super__.events.call(this), {
          'submit form': 'createObject'
        });
      };

      CreateGlobalObjectView.prototype.render = function() {
        CreateGlobalObjectView.__super__.render.call(this, 'Create a new Resource', createGlobalTemplate({
          models: this.collection.models,
          path: this.path
        }));
        this.alertView.setElement(this.$('.status'));
        return this;
      };

      CreateGlobalObjectView.prototype.handleErrors = function(model) {
        var error;
        error = model.errors.last();
        return this.alertView.showAlert('error', error.get('status'), error.getExtendedMessage());
      };

      CreateGlobalObjectView.prototype.createObject = function(event) {
        var $target, bucketData, name, _ref1,
          _this = this;
        $target = $(event.target);
        this.alertView.closeAlert();
        bucketData = {
          data_type: $target.find('.data_type').val(),
          _id: ((_ref1 = $target.find('.resourceId')) != null ? _ref1.val() : void 0) || ("" + ((name = $target.find('.name')).data('path')) + (name.val()))
        };
        return this.bucket.set(bucketData).save().done(function() {
          _this.global.trigger('notify', 'success', "" + ($target.find('.data_type option:selected').text()) + " in location " + bucketData._id + " has been created.");
          _this.hidePopover();
          return Backbone.history.navigate("" + _this.bucket.id + "/" + _this.bucket.attributes.refs.HEAD, true);
        });
      };

      CreateGlobalObjectView.prototype.onClose = function() {
        return this.bucket.off(null, null, this);
      };

      return CreateGlobalObjectView;

    })(PopoverView);
    return {
      CreateGlobalObjectView: CreateGlobalObjectView
    };
  });

}).call(this);
