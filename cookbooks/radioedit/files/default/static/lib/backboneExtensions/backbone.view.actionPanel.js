// Generated by CoffeeScript 1.4.0
(function() {

  define(function(require) {
    var Backbone, getValue, originalDelegate;
    Backbone = require('backbone');
    getValue = function(object, prop) {
      if (!(object && object[prop])) {
        return null;
      }
      if (_.isFunction(object[prop])) {
        return object[prop]();
      } else {
        return object[prop];
      }
    };
    originalDelegate = Backbone.View.prototype.delegateEvents;
    Backbone.View.prototype.delegateEvents = function(events) {
      if (!(events || (events = getValue(this, 'events')))) {
        events = {};
      }
      events["click *[data-callback]"] = "dispatchClick";
      return originalDelegate.call(this, events);
    };
    return Backbone.View.prototype.dispatchClick = function(e) {
      var args, data, el;
      e.preventDefault();
      e.stopPropagation();
      el = $(e.currentTarget);
      data = el.data();
      args = [e];
      if (el.is('.disabled')) {
        return;
      }
      if (!data.callback) {
        throw Error("Cannot dispatch a function without a data-callback attribute.");
      }
      if (data.args != null) {
        if (Object.isNumber(data.args)) {
          args.push(data.args);
        } else {
          args = args.concat(data.args.split(','));
        }
      }
      return this[data.callback].apply(this, args);
    };
  });

}).call(this);
