// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(function(require) {
    var TargetGroup, TargetGroupEdit, TargetGroupModelsModule, base, listTemplate;
    base = require('src/base');
    TargetGroupModelsModule = require('src/models/TargetGroup');
    listTemplate = require('eco/targetgroup/list');
    TargetGroup = (function(_super) {

      __extends(TargetGroup, _super);

      function TargetGroup() {
        return TargetGroup.__super__.constructor.apply(this, arguments);
      }

      TargetGroup.prototype.attributes = function() {
        base.Panel.prototype.attributes["class"] += ' targetGroupContainer';
        return base.Panel.prototype.attributes;
      };

      TargetGroup.prototype.initialize = function() {
        var _this = this;
        TargetGroup.__super__.initialize.call(this);
        this.collection = new TargetGroupModelsModule.TargetGroupCollection();
        return this.collection.fetch().done(function() {
          return _this.render();
        });
      };

      TargetGroup.prototype.render = function() {
        TargetGroup.__super__.render.call(this);
        this.inner.html(listTemplate({
          targetGroupCollection: this.collection
        }));
        return this.setRivet('.targetGroupList', {
          targetGroupCollection: this.collection
        });
      };

      return TargetGroup;

    })(base.Panel);
    TargetGroupEdit = (function(_super) {

      __extends(TargetGroupEdit, _super);

      function TargetGroupEdit() {
        return TargetGroupEdit.__super__.constructor.apply(this, arguments);
      }

      TargetGroupEdit.prototype.stack = [['<h1>Target Group Directory</h1>', '#targetgroup/']];

      TargetGroupEdit.prototype.initialize = function(options) {
        var _this = this;
        TargetGroupEdit.__super__.initialize.call(this);
        this.model = new TargetGroupModelsModule.TargetGroup({
          name: options.name
        });
        return this.model.fetch().done(function() {
          return _this.render();
        });
      };

      TargetGroupEdit.prototype.render = function() {
        TargetGroupEdit.__super__.render.call(this);
        return console.log(this.model);
      };

      return TargetGroupEdit;

    })(base.Panel);
    return {
      TargetGroup: TargetGroup,
      TargetGroupEdit: TargetGroupEdit
    };
  });

}).call(this);
