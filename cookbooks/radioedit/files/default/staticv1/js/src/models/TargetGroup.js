// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(function(require) {
    var Backbone, TargetGroup, TargetGroupCollection;
    Backbone = require('backbone');
    TargetGroup = (function(_super) {

      __extends(TargetGroup, _super);

      function TargetGroup() {
        return TargetGroup.__super__.constructor.apply(this, arguments);
      }

      TargetGroup.prototype.idAttribute = 'name';

      TargetGroup.prototype.urlRoot = "" + window.PRIVATE_URL_PREFIX + "/target_group/";

      TargetGroup.prototype.defaults = function() {
        return {
          name: void 0,
          description: void 0,
          limit: void 0,
          targets: []
        };
      };

      return TargetGroup;

    })(Backbone.Model);
    TargetGroupCollection = (function(_super) {

      __extends(TargetGroupCollection, _super);

      function TargetGroupCollection() {
        return TargetGroupCollection.__super__.constructor.apply(this, arguments);
      }

      TargetGroupCollection.prototype.url = "" + window.PRIVATE_URL_PREFIX + "/target_group/";

      TargetGroupCollection.prototype.model = TargetGroup;

      TargetGroupCollection.prototype.parse = function(response) {
        return response.result;
      };

      return TargetGroupCollection;

    })(Backbone.Collection);
    return {
      TargetGroup: TargetGroup,
      TargetGroupCollection: TargetGroupCollection
    };
  });

}).call(this);
